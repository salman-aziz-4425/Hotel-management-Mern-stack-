{"ast":null,"code":"import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Greeter from \"../artifacts/contracts/hotelManagement.sol/hotelManagement.json\"; // The contract address\n\nconst greeterAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nexport async function requestAccount() {\n  await window.ethereum.request({\n    method: \"eth_requestAccounts\"\n  });\n}\nexport async function createPayment(userId, payment, rooms) {\n  if (typeof window.ethereum !== \"undefined\") {\n    console.log(\"hello\");\n    await requestAccount();\n    const provider = new ethers.providers.JsonRpcProvider('http://localhost:8545');\n    ;\n    const signer = provider.getSigner();\n    console.log(signer);\n    const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n\n    try {\n      console.log(userId);\n      console.log(payment);\n      console.log(rooms);\n      const data = await contract.createPayment(userId, payment, rooms);\n      console.log(data);\n    } catch (error) {\n      console.log(\"Error: \", error);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/Projects/Hotel-management-Mern-stack-/client/hotel/src/utils/smartContract.js"],"names":["useState","ethers","Greeter","greeterAddress","requestAccount","window","ethereum","request","method","createPayment","userId","payment","rooms","console","log","provider","providers","JsonRpcProvider","signer","getSigner","contract","Contract","abi","data","error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,iEAApB,C,CACA;;AACA,MAAMC,cAAc,GAAG,4CAAvB;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAxB,CAAN;AACD;AACH,OAAO,eAAeC,aAAf,CAA6BC,MAA7B,EAAoCC,OAApC,EAA4CC,KAA5C,EAAmD;AACtD,MAAI,OAAOP,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AACxCO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMV,cAAc,EAApB;AAEF,UAAMW,QAAQ,GAAG,IAAId,MAAM,CAACe,SAAP,CAAiBC,eAArB,CAAqC,uBAArC,CAAjB;AAA+E;AAC/E,UAAMC,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,UAAME,QAAQ,GAAG,IAAInB,MAAM,CAACoB,QAAX,CACflB,cADe,EAEfD,OAAO,CAACoB,GAFO,EAGfJ,MAHe,CAAjB;;AAKA,QAAI;AACFL,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,YAAMW,IAAI,GAAG,MAAMH,QAAQ,CAACX,aAAT,CAAuBC,MAAvB,EAA8BC,OAA9B,EAAsCC,KAAtC,CAAnB;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACC,KAND,CAME,OAAOC,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBU,KAAvB;AACD;AACF;AACF","sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Greeter from \"../artifacts/contracts/hotelManagement.sol/hotelManagement.json\";\n// The contract address\nconst greeterAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nexport async function requestAccount() {\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  }\nexport async function createPayment(userId,payment,rooms) {\n    if (typeof window.ethereum !== \"undefined\") {\n        console.log(\"hello\")\n        await requestAccount();\n\n      const provider = new ethers.providers.JsonRpcProvider('http://localhost:8545');;\n      const signer = provider.getSigner();\n      console.log(signer)\n      const contract = new ethers.Contract(\n        greeterAddress,\n        Greeter.abi,\n        signer\n      );\n      try {\n        console.log(userId)\n        console.log(payment)\n        console.log(rooms)\n        const data = await contract.createPayment(userId,payment,rooms);\n      console.log(data)\n      } catch (error) {\n        console.log(\"Error: \", error);\n      }\n    }\n  }"]},"metadata":{},"sourceType":"module"}