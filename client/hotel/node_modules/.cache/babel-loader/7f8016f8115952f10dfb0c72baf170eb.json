{"ast":null,"code":"import { useState } from \"react\";\nimport { ethers } from \"ethers\"; // Import ABI Code to interact with smart contract\n\nimport Greeter from \"../artifacts/contracts/Token.sol/Token.json\";\nimport \"./App.css\"; // The contract address\n\nconst greeterAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"; // Helper Functions\n// Requests access to the user's Meta Mask Account\n// https://metamask.io/\n\nexport async function requestAccount() {\n  await window.ethereum.request({\n    method: \"eth_requestAccounts\"\n  });\n} // Fetches the current value store in greeting\n\nexport async function fetchGreeting() {\n  // If MetaMask exists\n  if (typeof window.ethereum !== \"undefined\") {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider);\n\n    try {\n      // Call Greeter.greet() and display current greeting in `console`\n\n      /* \n        function greet() public view returns (string memory) {\n          return greeting;\n        }\n      */\n      const data = await contract.getGreeting();\n      console.log(\"data: \", data);\n      setCurrentGreeting(data);\n    } catch (error) {\n      console.log(\"Error: \", error);\n    }\n  }\n} // Sets the greeting from input text box\n\nexport async function setGreeting() {\n  if (!message) return; // If MetaMask exists\n\n  if (typeof window.ethereum !== \"undefined\") {\n    await requestAccount();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner(); // Create contract with signer\n\n    /*\n      function setGreeting(string memory _greeting) public {\n        console.log(\"Changing greeting from '%s' to '%s'\", greeting, _greeting);\n        greeting = _greeting;\n      } \n    */\n\n    const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n    const transaction = await contract.setGreeting(message);\n    setMessage(\"\");\n    await transaction.wait();\n    fetchGreeting();\n  }\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/Projects/Hotel-management-Mern-stack-/client/hotel/src/utils/smartContract.js"],"names":["useState","ethers","Greeter","greeterAddress","requestAccount","window","ethereum","request","method","fetchGreeting","provider","providers","Web3Provider","contract","Contract","abi","data","getGreeting","console","log","setCurrentGreeting","error","setGreeting","message","signer","getSigner","transaction","setMessage","wait"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,cAAc,GAAG,4CAAvB,C,CAEE;AAEA;AACA;;AACF,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAxB,CAAN;AACD,C,CAED;;AACF,OAAO,eAAeC,aAAf,GAA+B;AAClC;AACA,MAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,UAAMI,QAAQ,GAAG,IAAIT,MAAM,CAACU,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,UAAMO,QAAQ,GAAG,IAAIZ,MAAM,CAACa,QAAX,CACfX,cADe,EAEfD,OAAO,CAACa,GAFO,EAGfL,QAHe,CAAjB;;AAKA,QAAI;AACF;;AACA;AACR;AACA;AACA;AACA;AACQ,YAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACI,WAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACAI,MAAAA,kBAAkB,CAACJ,IAAD,CAAlB;AACD,KAVD,CAUE,OAAOK,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AACD;AACF;AACF,C,CAED;;AACF,OAAO,eAAeC,WAAf,GAA6B;AAChC,MAAI,CAACC,OAAL,EAAc,OADkB,CAGhC;;AACA,MAAI,OAAOlB,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,UAAMF,cAAc,EAApB;AAEA,UAAMM,QAAQ,GAAG,IAAIT,MAAM,CAACU,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,UAAMkB,MAAM,GAAGd,QAAQ,CAACe,SAAT,EAAf,CAJ0C,CAM1C;;AACA;AACN;AACA;AACA;AACA;AACA;;AACM,UAAMZ,QAAQ,GAAG,IAAIZ,MAAM,CAACa,QAAX,CAAoBX,cAApB,EAAoCD,OAAO,CAACa,GAA5C,EAAiDS,MAAjD,CAAjB;AACA,UAAME,WAAW,GAAG,MAAMb,QAAQ,CAACS,WAAT,CAAqBC,OAArB,CAA1B;AAEAI,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA,UAAMD,WAAW,CAACE,IAAZ,EAAN;AACAnB,IAAAA,aAAa;AACd;AACJ","sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\n// Import ABI Code to interact with smart contract\nimport Greeter from \"../artifacts/contracts/Token.sol/Token.json\";\nimport \"./App.css\";\n\n// The contract address\nconst greeterAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\n\n  // Helper Functions\n\n  // Requests access to the user's Meta Mask Account\n  // https://metamask.io/\nexport async function requestAccount() {\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  }\n\n  // Fetches the current value store in greeting\nexport async function fetchGreeting() {\n    // If MetaMask exists\n    if (typeof window.ethereum !== \"undefined\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(\n        greeterAddress,\n        Greeter.abi,\n        provider\n      );\n      try {\n        // Call Greeter.greet() and display current greeting in `console`\n        /* \n          function greet() public view returns (string memory) {\n            return greeting;\n          }\n        */\n        const data = await contract.getGreeting();\n        console.log(\"data: \", data);\n        setCurrentGreeting(data);\n      } catch (error) {\n        console.log(\"Error: \", error);\n      }\n    }\n  }\n\n  // Sets the greeting from input text box\nexport async function setGreeting() {\n    if (!message) return;\n\n    // If MetaMask exists\n    if (typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      // Create contract with signer\n      /*\n        function setGreeting(string memory _greeting) public {\n          console.log(\"Changing greeting from '%s' to '%s'\", greeting, _greeting);\n          greeting = _greeting;\n        } \n      */\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n      const transaction = await contract.setGreeting(message);\n\n      setMessage(\"\");\n      await transaction.wait();\n      fetchGreeting();\n    }\n}"]},"metadata":{},"sourceType":"module"}