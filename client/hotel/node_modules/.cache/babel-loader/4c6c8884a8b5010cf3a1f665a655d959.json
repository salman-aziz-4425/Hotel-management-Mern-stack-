{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nconst initialState = {\n  User: {\n    _id: \"\",\n    Name: \"\",\n    Email: \"\",\n    Token: \"\",\n    img: \"\"\n  }\n};\nexport const UserSlice = createSlice({\n  name: 'userInfo',\n  initialState,\n  reducers: {\n    storingInfo: (state, action) => {\n      state.User = action.payload;\n      console.log(state.User);\n    },\n    deleteInfo: (state, action) => {\n      state.User = {\n        _id: \"\",\n        Name: \"\",\n        Email: \"\",\n        Token: \"\",\n        img: \"\"\n      };\n      localStorage.removeItem('persist:root');\n      storage.removeItem('persist:root');\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  storingInfo,\n  deleteInfo\n} = UserSlice.actions;\nexport default UserSlice.reducer;","map":{"version":3,"sources":["/Users/macbook/Desktop/Projects/Hotel-management-Mern-stack-/client/hotel/src/features/userInfo/userSlice.js"],"names":["createSlice","storage","initialState","User","_id","Name","Email","Token","img","UserSlice","name","reducers","storingInfo","state","action","payload","console","log","deleteInfo","localStorage","removeItem","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC;AACHC,IAAAA,GAAG,EAAC,EADD;AAEHC,IAAAA,IAAI,EAAC,EAFF;AAGHC,IAAAA,KAAK,EAAC,EAHH;AAIHC,IAAAA,KAAK,EAAC,EAJH;AAKHC,IAAAA,GAAG,EAAC;AALD;AADc,CAArB;AAUA,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAAC;AACnCU,EAAAA,IAAI,EAAE,UAD6B;AAEnCR,EAAAA,YAFmC;AAGnCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC7BD,MAAAA,KAAK,CAACV,IAAN,GAAWW,MAAM,CAACC,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACV,IAAlB;AACD,KAJO;AAKRe,IAAAA,UAAU,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAgB;AACzBD,MAAAA,KAAK,CAACV,IAAN,GAAW;AACTC,QAAAA,GAAG,EAAC,EADK;AAETC,QAAAA,IAAI,EAAC,EAFI;AAGTC,QAAAA,KAAK,EAAC,EAHG;AAITC,QAAAA,KAAK,EAAC,EAJG;AAKTC,QAAAA,GAAG,EAAC;AALK,OAAX;AAOAW,MAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACAnB,MAAAA,OAAO,CAACmB,UAAR,CAAmB,cAAnB;AACD;AAfO;AAHyB,CAAD,CAA7B,C,CAsBP;;AACA,OAAO,MAAM;AAACR,EAAAA,WAAD;AAAaM,EAAAA;AAAb,IAA2BT,SAAS,CAACY,OAA3C;AAEP,eAAeZ,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport storage from 'redux-persist/lib/storage';\nconst initialState = {\n  User:{\n    _id:\"\",\n    Name:\"\",\n    Email:\"\",\n    Token:\"\",\n    img:\"\"\n  }\n}\n\nexport const UserSlice = createSlice({\n  name: 'userInfo',\n  initialState,\n  reducers: {\n    storingInfo: (state,action) => {\n      state.User=action.payload \n      console.log(state.User)\n    },\n    deleteInfo:(state,action)=>{\n      state.User={\n        _id:\"\",\n        Name:\"\",\n        Email:\"\",\n        Token:\"\",\n        img:\"\"\n      }\n      localStorage.removeItem('persist:root')\n      storage.removeItem('persist:root')\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const {storingInfo,deleteInfo} = UserSlice.actions\n\nexport default UserSlice.reducer"]},"metadata":{},"sourceType":"module"}