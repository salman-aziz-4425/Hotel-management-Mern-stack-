{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  Room: [],\n  Cost: 0\n};\nexport const BookedRoomSlice = createSlice({\n  name: 'bookedRoom',\n  initialState,\n  reducers: {\n    bookedRoom: (state, action) => {\n      state.Room.push(action.payload);\n      state.Room = [...new Set(state.Room)];\n    },\n    updateRoom: (state, action) => {\n      state.Room = action.payload;\n    },\n    deleteRoom: (state, action) => {\n      state.Room = [];\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  bookedRoom,\n  deleteRoom\n} = BookedRoomSlice.actions;\nexport default BookedRoomSlice.reducer;","map":{"version":3,"sources":["/Users/applea1989/Desktop/Salman/Project/client/hotel/src/features/roomSlice/roomSlice.js"],"names":["createSlice","initialState","Room","Cost","BookedRoomSlice","name","reducers","bookedRoom","state","action","push","payload","Set","updateRoom","deleteRoom","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,EADY;AAEjBC,EAAAA,IAAI,EAAC;AAFY,CAArB;AAKA,OAAO,MAAMC,eAAe,GAAGJ,WAAW,CAAC;AACzCK,EAAAA,IAAI,EAAE,YADmC;AAEzCJ,EAAAA,YAFyC;AAGzCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC5BD,MAAAA,KAAK,CAACN,IAAN,CAAWQ,IAAX,CAAgBD,MAAM,CAACE,OAAvB;AACAH,MAAAA,KAAK,CAACN,IAAN,GAAW,CAAC,GAAG,IAAIU,GAAJ,CAAQJ,KAAK,CAACN,IAAd,CAAJ,CAAX;AACD,KAJO;AAKRW,IAAAA,UAAU,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAgB;AACzBD,MAAAA,KAAK,CAACN,IAAN,GAAWO,MAAM,CAACE,OAAlB;AACD,KAPO;AAQRG,IAAAA,UAAU,EAAC,CAACN,KAAD,EAAOC,MAAP,KAAgB;AACvBD,MAAAA,KAAK,CAACN,IAAN,GAAW,EAAX;AACH;AAVO;AAH+B,CAAD,CAAnC,C,CAiBP;;AACA,OAAO,MAAM;AAACK,EAAAA,UAAD;AAAYO,EAAAA;AAAZ,IAAyBV,eAAe,CAACW,OAA/C;AAEP,eAAeX,eAAe,CAACY,OAA/B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    Room:[],\n    Cost:0,\n}\n\nexport const BookedRoomSlice = createSlice({\n  name: 'bookedRoom',\n  initialState,\n  reducers: {\n    bookedRoom: (state,action) => {\n      state.Room.push(action.payload)\n      state.Room=[...new Set(state.Room)]\n    },\n    updateRoom:(state,action)=>{\n      state.Room=action.payload\n    },\n    deleteRoom:(state,action)=>{\n        state.Room=[]\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const {bookedRoom,deleteRoom} =BookedRoomSlice.actions\n\nexport default BookedRoomSlice.reducer"]},"metadata":{},"sourceType":"module"}