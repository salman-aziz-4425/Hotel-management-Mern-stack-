{"ast":null,"code":"import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Greeter from \"../artifacts/contracts/Greetings.sol/Greetings.json\"; // The contract address\n\nconst greeterAddress = \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\";\nexport async function requestAccount() {\n  await window.ethereum.request({\n    method: \"eth_requestAccounts\"\n  });\n}\nexport async function fetchGreeting() {\n  // If MetaMask exists\n  if (typeof window.ethereum !== \"undefined\") {\n    console.log(\"hello\");\n    await requestAccount();\n    const provider = new ethers.providers.JsonRpcProvider('http://localhost:8545');\n    ;\n    const signer = provider.getSigner();\n    console.log(signer);\n    const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider);\n\n    try {\n      const data = await contract.getGreetings2();\n      console.log(data);\n    } catch (error) {\n      console.log(\"Error: \", error);\n    }\n  }\n} //   // Sets the greeting from input text box\n// export async function setGreeting() {\n//     if (!message) return;\n//     // If MetaMask exists\n//     if (typeof window.ethereum !== \"undefined\") {\n//       await requestAccount();\n//       const provider = new ethers.providers.Web3Provider(window.ethereum);\n//       const signer = provider.getSigner();\n//       // Create contract with signer\n//       /*\n//         function setGreeting(string memory _greeting) public {\n//           console.log(\"Changing greeting from '%s' to '%s'\", greeting, _greeting);\n//           greeting = _greeting;\n//         } \n//       */\n//       const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n//       const transaction = await contract.setGreeting(message);\n//       setMessage(\"\");\n//       await transaction.wait();\n//       fetchGreeting();\n//     }\n// }","map":{"version":3,"sources":["/Users/macbook/Desktop/Projects/Hotel-management-Mern-stack-/client/hotel/src/utils/smartContract.js"],"names":["useState","ethers","Greeter","greeterAddress","requestAccount","window","ethereum","request","method","fetchGreeting","console","log","provider","providers","JsonRpcProvider","signer","getSigner","contract","Contract","abi","data","getGreetings2","error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,qDAApB,C,CAEA;;AACA,MAAMC,cAAc,GAAG,4CAAvB;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAxB,CAAN;AACD;AACH,OAAO,eAAeC,aAAf,GAA+B;AAClC;AACA,MAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AACxCI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMP,cAAc,EAApB;AAEF,UAAMQ,QAAQ,GAAG,IAAIX,MAAM,CAACY,SAAP,CAAiBC,eAArB,CAAqC,uBAArC,CAAjB;AAA+E;AAC/E,UAAMC,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,UAAME,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,QAAX,CACff,cADe,EAEfD,OAAO,CAACiB,GAFO,EAGfP,QAHe,CAAjB;;AAKA,QAAI;AACF,YAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,aAAT,EAAnB;AACFX,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACC,KAHD,CAGE,OAAOE,KAAP,EAAc;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBW,KAAvB;AACD;AACF;AACF,C,CAEH;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Greeter from \"../artifacts/contracts/Greetings.sol/Greetings.json\";\n\n// The contract address\nconst greeterAddress = \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\";\nexport async function requestAccount() {\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  }\nexport async function fetchGreeting() {\n    // If MetaMask exists\n    if (typeof window.ethereum !== \"undefined\") {\n        console.log(\"hello\")\n        await requestAccount();\n\n      const provider = new ethers.providers.JsonRpcProvider('http://localhost:8545');;\n      const signer = provider.getSigner();\n      console.log(signer)\n      const contract = new ethers.Contract(\n        greeterAddress,\n        Greeter.abi,\n        provider\n      );\n      try {\n        const data = await contract.getGreetings2();\n      console.log(data)\n      } catch (error) {\n        console.log(\"Error: \", error);\n      }\n    }\n  }\n\n//   // Sets the greeting from input text box\n// export async function setGreeting() {\n//     if (!message) return;\n\n//     // If MetaMask exists\n//     if (typeof window.ethereum !== \"undefined\") {\n//       await requestAccount();\n\n//       const provider = new ethers.providers.Web3Provider(window.ethereum);\n//       const signer = provider.getSigner();\n\n//       // Create contract with signer\n//       /*\n//         function setGreeting(string memory _greeting) public {\n//           console.log(\"Changing greeting from '%s' to '%s'\", greeting, _greeting);\n//           greeting = _greeting;\n//         } \n//       */\n//       const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n//       const transaction = await contract.setGreeting(message);\n\n//       setMessage(\"\");\n//       await transaction.wait();\n//       fetchGreeting();\n//     }\n// }"]},"metadata":{},"sourceType":"module"}