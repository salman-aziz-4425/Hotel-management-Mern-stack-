{"ast":null,"code":"import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Greeter from \"../artifacts/contracts/hotelManagement.sol/hotelManagement.json\"; // The contract address\n\nconst contractAddress = \"0x0165878A594ca255338adfa4d48449f69242Eb8F\";\nexport async function createPayment(userId, payment, rooms) {\n  if (typeof window.ethereum !== \"undefined\") {\n    await requestAccount();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n\n    try {\n      const transaction = await contract.createPayment(userId, payment, rooms);\n      const transactionReceipt = await transaction.wait(); // Check if the transaction was successful\n\n      if (transactionReceipt.status === 1) {\n        // Retrieve the emitted event\n        const filter = contract.filters.PaymentCreated(null, null);\n        const events = await contract.queryFilter(filter, transactionReceipt.blockHash);\n        const result = events[0].args[0];\n        console.log(\"Result:\", result);\n      } else {\n        console.log(\"Transaction failed.\");\n      }\n    } catch (error) {\n      console.log(\"Error: \", error);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/Projects/Hotel-management-Mern-stack-/client/hotel/src/utils/smartContract.js"],"names":["useState","ethers","Greeter","contractAddress","createPayment","userId","payment","rooms","window","ethereum","requestAccount","provider","providers","Web3Provider","signer","getSigner","contract","Contract","contractABI","transaction","transactionReceipt","wait","status","filter","filters","PaymentCreated","events","queryFilter","blockHash","result","args","console","log","error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,iEAApB,C,CACA;;AACA,MAAMC,eAAe,GAAG,4CAAxB;AACA,OAAO,eAAeC,aAAf,CAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,KAA9C,EAAqD;AAC1D,MAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,UAAMC,cAAc,EAApB;AAEA,UAAMC,QAAQ,GAAG,IAAIV,MAAM,CAACW,SAAP,CAAiBC,YAArB,CAAkCL,MAAM,CAACC,QAAzC,CAAjB;AACA,UAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,UAAMC,QAAQ,GAAG,IAAIf,MAAM,CAACgB,QAAX,CAAoBd,eAApB,EAAqCe,WAArC,EAAkDJ,MAAlD,CAAjB;;AAEA,QAAI;AACF,YAAMK,WAAW,GAAG,MAAMH,QAAQ,CAACZ,aAAT,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwCC,KAAxC,CAA1B;AACA,YAAMa,kBAAkB,GAAG,MAAMD,WAAW,CAACE,IAAZ,EAAjC,CAFE,CAIF;;AACA,UAAID,kBAAkB,CAACE,MAAnB,KAA8B,CAAlC,EAAqC;AACnC;AACA,cAAMC,MAAM,GAAGP,QAAQ,CAACQ,OAAT,CAAiBC,cAAjB,CAAgC,IAAhC,EAAsC,IAAtC,CAAf;AACA,cAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,WAAT,CAAqBJ,MAArB,EAA6BH,kBAAkB,CAACQ,SAAhD,CAArB;AACA,cAAMC,MAAM,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAUI,IAAV,CAAe,CAAf,CAAf;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACD,OAPD,MAOO;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF,KAfD,CAeE,OAAOC,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;AACD;AACF;AACF","sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Greeter from \"../artifacts/contracts/hotelManagement.sol/hotelManagement.json\";\n// The contract address\nconst contractAddress = \"0x0165878A594ca255338adfa4d48449f69242Eb8F\";\nexport async function createPayment(userId, payment, rooms) {\n  if (typeof window.ethereum !== \"undefined\") {\n    await requestAccount();\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n\n    try {\n      const transaction = await contract.createPayment(userId, payment, rooms);\n      const transactionReceipt = await transaction.wait();\n\n      // Check if the transaction was successful\n      if (transactionReceipt.status === 1) {\n        // Retrieve the emitted event\n        const filter = contract.filters.PaymentCreated(null, null);\n        const events = await contract.queryFilter(filter, transactionReceipt.blockHash);\n        const result = events[0].args[0];\n\n        console.log(\"Result:\", result);\n      } else {\n        console.log(\"Transaction failed.\");\n      }\n    } catch (error) {\n      console.log(\"Error: \", error);\n    }\n  }\n}\n  \n  \n  "]},"metadata":{},"sourceType":"module"}